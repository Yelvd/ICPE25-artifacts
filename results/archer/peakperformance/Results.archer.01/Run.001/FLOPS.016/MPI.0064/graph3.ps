%!PS-Adobe-2.0
%%Title: Results.archer.01/Run.001/FLOPS.016/MPI.0064/graph3.ps
%%Creator: gnuplot 5.4 patchlevel 2
%%CreationDate: Sun Mar 31 21:37:28 2024
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Results.archer.01/Run.001/FLOPS.016/MPI.0064/graph3.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.4 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Mar 31 21:37:28 2024)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
770 448 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 448 M
63 0 V
6044 0 R
-63 0 V
stroke
686 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+01)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
770 1076 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 1076 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 1443 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 1443 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 1704 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 1704 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 1906 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 1906 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 2071 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 2071 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 2210 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 2210 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 2331 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 2331 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 2438 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 2438 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 2534 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 2534 M
63 0 V
6044 0 R
-63 0 V
stroke
686 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+02)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
770 3161 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 3161 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 3529 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 3529 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 3789 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 3789 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 3991 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 3991 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 4156 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 4156 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 4296 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 4296 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 4417 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 4417 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 4524 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 4524 M
31 0 V
6076 0 R
-31 0 V
stroke
LTa
LCa setrgbcolor
770 4619 M
6107 0 V
stroke
LTb
LCb setrgbcolor
770 4619 M
63 0 V
6044 0 R
-63 0 V
stroke
686 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+03)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
836 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
836 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
899 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
899 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
954 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
954 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1003 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1003 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1047 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1047 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1047 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+03)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1333 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1333 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1500 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1500 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1619 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1619 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1711 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1711 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1787 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1787 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1850 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1850 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1905 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1905 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1954 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1954 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
1998 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
1998 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1998 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+04)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2284 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2284 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2451 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2451 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2570 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2570 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2662 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2662 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2738 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2738 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2801 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2801 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2856 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2856 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2905 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2905 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
2949 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
2949 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2949 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+05)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3235 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3235 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3402 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3402 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3521 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3521 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3613 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3613 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3689 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3689 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3752 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3752 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3808 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3808 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3856 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3856 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
3900 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
3900 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3900 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+06)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
4186 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4186 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4353 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4353 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4472 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4472 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4564 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4564 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4640 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4640 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4703 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4703 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4759 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4759 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4807 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4807 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
4851 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
4851 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4851 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+07)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
5137 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5137 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5305 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5305 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5423 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5423 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5516 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5516 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5591 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5591 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5654 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5654 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5710 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5710 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5758 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5758 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
5802 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
5802 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5802 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+08)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
6088 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6088 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6256 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6256 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6374 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6374 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6467 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6467 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6542 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6542 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6606 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6606 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6661 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6661 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6709 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6709 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTa
LCa setrgbcolor
6753 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
6753 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6753 308 M
[ [(Helvetica) 140.0 0.0 true true 0 (1e+09)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
[0 100] 0 setdash
LTw
LCw setrgbcolor
770 2534 M
6107 0 V
stroke
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6107 0 V
0 4171 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
133 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Total Bandwidth \(GB/s\))]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
3823 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Working Set Size \(bytes\))]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
LTb
LCb setrgbcolor
% Begin plot #1
0.400 UP
1.000 UL
LTb
0.58 0.00 0.83 C
770 1757 M
286 637 V
168 358 V
119 261 V
92 201 V
75 166 V
64 133 V
55 118 V
49 99 V
43 92 V
39 -81 V
36 246 V
33 -95 V
31 90 V
29 -167 V
26 284 V
25 -171 V
24 80 V
22 -136 V
21 234 V
40 -88 V
36 83 V
33 -69 V
30 77 V
29 -57 V
39 -42 V
36 90 V
33 -117 V
31 77 V
37 4 V
35 0 V
39 -49 V
36 87 V
39 -24 V
36 21 V
39 -54 V
35 33 V
37 8 V
37 -25 V
39 19 V
38 17 V
38 1 V
38 -9 V
37 -13 V
39 5 V
37 27 V
38 -22 V
39 22 V
38 -18 V
38 10 V
39 7 V
39 -9 V
39 4 V
39 -7 V
39 2 V
39 15 V
39 -13 V
40 6 V
39 2 V
39 -3 V
39 3 V
39 -2 V
39 -6 V
40 9 V
39 -2 V
39 -7 V
39 11 V
40 -2 V
39 1 V
39 -9 V
39 5 V
40 -5 V
39 2 V
39 8 V
40 1 V
39 -3 V
39 3 V
39 -10 V
40 -4 V
39 14 V
40 -9 V
39 -2 V
39 0 V
40 12 V
39 -3 V
39 4 V
40 -1 V
39 -10 V
39 2 V
40 12 V
39 -2 V
39 -8 V
40 8 V
39 1 V
39 -7 V
40 -12 V
39 12 V
39 -2 V
40 13 V
39 -7 V
40 -2 V
39 9 V
39 -3 V
40 12 V
39 -17 V
39 17 V
40 0 V
39 -3 V
39 -1 V
40 20 V
39 3 V
40 -3 V
39 3 V
39 0 V
40 -4 V
39 2 V
39 43 V
40 0 V
39 -3 V
39 1 V
40 -3 V
39 3 V
40 -2 V
39 4 V
39 82 V
40 1 V
39 -4 V
39 1 V
40 -10 V
39 -184 V
39 -286 V
40 -742 V
39 -86 V
40 -51 V
39 -25 V
39 -14 V
40 -6 V
39 3 V
39 -2 V
40 0 V
39 0 V
40 0 V
39 0 V
39 2 V
40 -1 V
39 1 V
770 1757 CircleF
1056 2394 CircleF
1224 2752 CircleF
1343 3013 CircleF
1435 3214 CircleF
1510 3380 CircleF
1574 3513 CircleF
1629 3631 CircleF
1678 3730 CircleF
1721 3822 CircleF
1760 3741 CircleF
1796 3987 CircleF
1829 3892 CircleF
1860 3982 CircleF
1889 3815 CircleF
1915 4099 CircleF
1940 3928 CircleF
1964 4008 CircleF
1986 3872 CircleF
2007 4106 CircleF
2047 4018 CircleF
2083 4101 CircleF
2116 4032 CircleF
2146 4109 CircleF
2175 4052 CircleF
2214 4010 CircleF
2250 4100 CircleF
2283 3983 CircleF
2314 4060 CircleF
2351 4064 CircleF
2386 4064 CircleF
2425 4015 CircleF
2461 4102 CircleF
2500 4078 CircleF
2536 4099 CircleF
2575 4045 CircleF
2610 4078 CircleF
2647 4086 CircleF
2684 4061 CircleF
2723 4080 CircleF
2761 4097 CircleF
2799 4098 CircleF
2837 4089 CircleF
2874 4076 CircleF
2913 4081 CircleF
2950 4108 CircleF
2988 4086 CircleF
3027 4108 CircleF
3065 4090 CircleF
3103 4100 CircleF
3142 4107 CircleF
3181 4098 CircleF
3220 4102 CircleF
3259 4095 CircleF
3298 4097 CircleF
3337 4112 CircleF
3376 4099 CircleF
3416 4105 CircleF
3455 4107 CircleF
3494 4104 CircleF
3533 4107 CircleF
3572 4105 CircleF
3611 4099 CircleF
3651 4108 CircleF
3690 4106 CircleF
3729 4099 CircleF
3768 4110 CircleF
3808 4108 CircleF
3847 4109 CircleF
3886 4100 CircleF
3925 4105 CircleF
3965 4100 CircleF
4004 4102 CircleF
4043 4110 CircleF
4083 4111 CircleF
4122 4108 CircleF
4161 4111 CircleF
4200 4101 CircleF
4240 4097 CircleF
4279 4111 CircleF
4319 4102 CircleF
4358 4100 CircleF
4397 4100 CircleF
4437 4112 CircleF
4476 4109 CircleF
4515 4113 CircleF
4555 4112 CircleF
4594 4102 CircleF
4633 4104 CircleF
4673 4116 CircleF
4712 4114 CircleF
4751 4106 CircleF
4791 4114 CircleF
4830 4115 CircleF
4869 4108 CircleF
4909 4096 CircleF
4948 4108 CircleF
4987 4106 CircleF
5027 4119 CircleF
5066 4112 CircleF
5106 4110 CircleF
5145 4119 CircleF
5184 4116 CircleF
5224 4128 CircleF
5263 4111 CircleF
5302 4128 CircleF
5342 4128 CircleF
5381 4125 CircleF
5420 4124 CircleF
5460 4144 CircleF
5499 4147 CircleF
5539 4144 CircleF
5578 4147 CircleF
5617 4147 CircleF
5657 4143 CircleF
5696 4145 CircleF
5735 4188 CircleF
5775 4188 CircleF
5814 4185 CircleF
5853 4186 CircleF
5893 4183 CircleF
5932 4186 CircleF
5972 4184 CircleF
6011 4188 CircleF
6050 4270 CircleF
6090 4271 CircleF
6129 4267 CircleF
6168 4268 CircleF
6208 4258 CircleF
6247 4074 CircleF
6286 3788 CircleF
6326 3046 CircleF
6365 2960 CircleF
6405 2909 CircleF
6444 2884 CircleF
6483 2870 CircleF
6523 2864 CircleF
6562 2867 CircleF
6601 2865 CircleF
6641 2865 CircleF
6680 2865 CircleF
6720 2865 CircleF
6759 2865 CircleF
6798 2867 CircleF
6838 2866 CircleF
6877 2867 CircleF
% End plot #1
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
770 4619 N
770 448 L
6107 0 V
0 4171 V
-6107 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3823 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Graph 3 \(Results.archer.01/Run.001/FLOPS.016/MPI.0064\))]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
